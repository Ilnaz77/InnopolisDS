Файлы:
> - вывод команды перенаправляется 
history | less - история команд с скролом
grep ';' ex* - глянуть большой файл найти строки с ; в файлах ex
grep -c ';' ex*.C - глянуть сколько строк с этим ;
grep -o - не всю строку выдает, а только что входит в выражение ';'
grep -o '".*;' ex*.C
man команда - информация по команде
ls - глянуть что в папке
cat имя_файла - глянуть что внутри файла
nano + ctrl_z + имя_файл - создаст txt
cat >> zzz2.txt - далее идет запись с клавы в zzz2.txt далее ctrl_d
ls -la - более подробная инфа по файлам в каталоге
ls -l - без .файлов
chmod 750 file - меняяем права доступа файла. 750 в вики читай (r-4, w-2, x-1)
tail имя_файла - хвост
head имя_Файла - голова файла
ls | sort -r | tail -n 3 - выведем ls и подадим на вход в sort - r (обратная сортировка) и тд (pipepline)
wc - wordcount, число строк, слов, и байтов
apropos <ключевое_слово>- инфу выдает про команду всевозможные

Процессы:
ps - процеесы, то что сейчас запущено показывает 
ps -A - все процеесы показывает
ps -A v - %MEM показывает скоко оперативы жрет, то есть команда еще подробнее (главное 1столбец и адрес)
top - показывает первые сколько-то процессов которые че-то делают
users - показывает пользователей
kill -9 'ID процесса'- убьет процесс
Запуск процессов в бэкграунде и фограунде:
gcc ex4.c -o ppp1 - компиляция
./ppp1 - запус программы
./ppp1 & - будет виесть но можно использовать терминал
ps - глянем что он там висит
jobs - покажет что прога висит в бэкгрануде
fg %1 - покажет зависшую программу, цифра показывает в jobs там числа типа [1] 
+  ctrl_z - застопит ее
jobs 
pstree - дерево процессов
kill -9 'PID процесса без кавчек' - убьем процесс и далее глянем в jobs что он убит

fork:
СИст. вызов, приводит к тому что создает клон этого процесса
----------------------
Принимает на вход пользовательский ввод и выдыает рез-т.
Аргумент в виде названия команды и запускает ее.
Она ждет постоянно наш ввод.
Она висит мы вводим что-то + enter => запускает и выдает рез-т.
Через exec или execv вызываем внутри C шелловские команды.
Передаем этому exec команду.
Внутри бесконечного цикла делаем.